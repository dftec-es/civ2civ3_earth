; Modifying this file:
; You should not modify this file except to make bugfixes or
; for other "maintenance".  If you want to make custom changes,
; you should create a new datadir subdirectory and copy this file
; into that directory, and then modify that copy.  Then use the
; command "rulesetdir <mysubdir>" in the server to have freeciv
; use your new customized file.

; Note that the freeciv AI may not cope well with anything more
; than minor changes.


[datafile]
description="Civ2Civ3 Earth ruleset terrain data for Freeciv"
ruledit="3.1.0-beta2+"
options="+Freeciv-3.1-ruleset"
format_version=20

[control]
flags={"name","helptxt"
"Wood","Can be mined to produce Lumber."
"Oil","Mine can be upgraded to Oil Well."
"Sea","Allows cities to build Harbors and coastal wonders."
"NoPollution","No Pollution nor Fallout appear here."
"NoWheeled","Terrain not suitable for wheeled units."
"RecoverHP","Allows units to recover extra HP."
"CanHaveStorm","Storms can appear here."
"NoFortify","No units can fortify on this terrain."
}
extra_flags={"name","helptxt"
"ParadropFrom","Units can paradrop from this tile."
"DiplomatDefense","Diplomatic units get a 25% defense bonus in diplomatic fights."
"IrrigationSource",""
"AllowsFarmlandOnDesert",""
"ForWheeled","Suitable for wheeled units."
}

[parameters]
ocean_reclaim_requirement=30
land_channel_requirement=10
thaw_requirement=0
freeze_requirement=0
lake_max_size=14
move_fragments=6
igter_cost=2

; /* <-- avoid gettext warnings
;
; The individual terrain types, one per section.
; Roughly sorted by identifier.
; The actual tag used (the * in [terrain_*]) must be unique for each terrain,
; and may be used in debug output when reading this file.
;
; Notes:
;
; name                 = translatable name as seen by user
; rule_name            = (optional) internal name for savegames, rulesets etc;
;                        if not present, "name" is used for this purpose too.
;                        Since the name used in savegames must not change, if
;                        you want to rename an item after a ruleset has been
;                        released, you should set "rule_name" to the original
;                        value of "name".
; graphic              = preferred graphic; Tilespec [tile_*] section
;                        with 'tag' matching this will be used.
; graphic_alt          = alternate graphic. When no tilespec 'tag' matching
;                        preferred graphic is not found, this will be used.
;                        Otherwise may be "-"
; identifier           = single-character identifier used in savegames. This
;                        must be unique for each terrain.
; class                = Terrain class terrain belongs to: "Land" or "Oceanic"
; movement_cost        = in whole movement points, not move_fragments;
;                        typically 1 to 3
; defense_bonus        = percent added to defense; typically 0% to 200%
; food                 = normal food production
; shield               = normal shield production
; trade                = normal trade production
; resources            = list of possible resources on this terrain
; road_food_incr_pct   = percent of road food_incr applied to this terrain
; road_shield_incr_pct = percent of road shield_incr applied to this terrain
; road_trade_incr_pct  = percent of road trade_incr applied to this terrain
; base_time            = time to build bases; if 0, cannot build any bases.
;                        Nonzero values only affect extras with build_time 0.
; road_time            = time to build roads; if 0, cannot build any roads.
;                        Nonzero values only affect extras with build_time 0.
; cultivate_result     = cultivate activity changes to that terrain
;                        'no' to disable cultivate
; cultivate_time       = time to cultivate
; plant_result         = plant activity changes to that terrain
;                        'no' to disable planting
; plant_time           = time to plant
; irrigation_food_incr = increment to food if tile is 100% irrigated
;                        (actual bonus controlled by Irrigation_Pct effect)
; irrigation_time      = time for 'irrigate' activity; if 0, cannot irrigate
;                        Nonzero values only affect extras with build_time 0.
;                        Such extras can modify time with build_time_factor.
; mining_shield_incr   = increment to shields if tile is 100% mined
;                        (actual bonus controlled by Mining_Pct effect)
; mining_time          = time for 'mine' activity; if 0, cannot mine
;                        Nonzero values only affect extras with build_time 0.
;                        Such extras can modify time with build_time_factor.
; transform_result     = result of transformation; one of:
;                        "no"  -- cannot transform
;                        terrain rule_name -- transformation changes to that
;                          terrain
; transform_time       = time to transform
; placing_time         = time for 'placing' an extra; if 0, cannot place
;                        Nonzero values only affect extras with build_time 0.
;                        Such extras can modify time with build_time_factor.
;                        Default is 1.
; pillage_time         = time to pillage extra from the tile (0 = impossible)
;                        Nonzero values only affect extras with removal_time 0.
; clean_pollution_time = time to clean pollution (0 = impossible)
;                        Nonzero values only affect extras with removal_time 0.
; clean_fallout_time   = time to clean fallout (0 = impossible)
;                        Nonzero values only affect extras with removal_time 0.
; animal               = unit type that can appear as animal on the terrain
; warmer_wetter_result = result of global warming for wet terrains; one of:
;                        "no"  -- no change; does not count for warming
;                        "yes" -- no change; counts for warming
;                        terrain rule_name -- warming changes to that terrain
; warmer_drier_result  = result of global warming for dry terrains;
;                        see warmer_wetter_result
; cooler_wetter_result = result of nuclear winter for wet terrains;
;                        see warmer_wetter_result
; cooler_drier_result  = result of nuclear winter for dry terrains;
;                        see warmer_wetter_result
; native_to            = List of unit classes that can move here
; flags                = General flags for this terrain. List taken from the
;                        following, and/or any user flags defined above:
;   - NoBarbs          = Barbarians will not be spawned here.
;   - NoCities         = Cities may not be built or found on this terrain.
;   - Starter          = Players will only be started on "Starter" terrain.
;                        (Currently this cannot be Oceanic terrain.)
;   - CanHaveRiver     = Set to 1 if this terrain can have river on it (the
;                        actual chance of river generation is controlled
;                        separately).
;   - UnsafeCoast      = This terrain does not provide a safe voyage for
;                        units with flag "CoastStrict"
;   - FreshWater       = This terrain is used for small bodies of water.
;                        If this becomes adjacent to non-FreshWater terrain,
;                        the whole contiguous FreshWater area will be flooded
;                        with the non-FreshWater terrain.
;   - NotGenerated     = Map generator never places this terrain type. It can
;                        be added from editor only, or by ingame events
;                        (lua scripting)
;   - NoZoc            = Units on this terrain are not generating or subject
;                        to zoc
;   - NoFortify        = Units cannot fortify on this terrain
;   - Frozen           = Frozen/polar terrain. For water tiles, Frozen terrain
;                        is generated near poles. Conversion between frozen
;                        and unfrozen terrain can be controlled with
;                        thaw_requirement/freeze_requirement, and Frozen
;                        terrain is shown differently on the overview map.
; property_*           = specific property % values used by mapgen. Most
;                        terrains will have 0 for most values. Properties
;                        other than ocean_depth are only used for land tiles.
;  - mountainous       = degree to which this terrain is mountainous
;  - green             = how much life this terrain has
;  - foliage           = how much thick undergrowth the terrain has
;  - tropical          = how "tropical" the terrain is (high temperature)
;  - temperate         = how "temperate" the terrain is (med temperature)
;  - cold              = how "cold" the terrain is (low temperature)
;  - frozen            = how "frozen" the terrain is (very low temperature)
;                        (does not necessarily have to have the "Frozen" flag)
;  - wet               = how "wet" the terrain is (moisture)
;  - dry               = how "dry" the terrain is (moisture)
;  - ocean_depth       = the depth of an ocean, as an average level
; color.r              = color of the terrain (red value)
; color.g              = color of the terrain (green value)
; color.b              = color of the terrain (blue value)
; helptext             = optional help text string; should escape all raw
;                        newlines so that xgettext parsing works
;
; */ <-- avoid gettext warnings


[terrain_0]
name=_("Inaccessible")
graphic="inaccessible"
graphic_alt="arctic"
identifier="i"
class="Land"
movement_cost=0
defense_bonus=0
base_time=0
road_time=0
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=0
irrigation_time=0
mining_shield_incr=0
mining_time=0
transform_result="none"
transform_time=0
animal="None"
placing_time=1
pillage_time=0
clean_pollution_time=0
clean_fallout_time=0
warmer_wetter_result="none"
warmer_drier_result="none"
cooler_wetter_result="none"
cooler_drier_result="none"
flags="NoCities","UnsafeCoast","NotGenerated","Frozen","NoPollution"
color.r=25
color.g=25
color.b=25
helptext="No unit can enter this terrain, nor can any city work its tiles."

[terrain_1]
name=_("Lake")
graphic="lake"
graphic_alt="coast"
identifier="+"
class="Oceanic"
movement_cost=1
defense_bonus=0
food=2
trade=2
resources="Fish","Shellfish"
base_time=1
road_time=0
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=0
irrigation_time=0
mining_shield_incr=0
mining_time=0
transform_result="Grassland"
transform_time=36
animal="None"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="Swamp"
warmer_drier_result="none"
cooler_wetter_result="Glacier"
cooler_drier_result="none"
flags="NoBarbs","NoCities","FreshWater","NoZoc","NoPollution","RecoverHP","NoFortify"
native_to="Missile","Sea","Trireme","Sub","Helicopter","Air"
color.r=46
color.g=120
color.b=182
helptext="Lakes are substantial bodies of fresh water."

[terrain_2]
name=_("Ocean")
graphic="coast"
graphic_alt="-"
identifier=" "
class="Oceanic"
movement_cost=1
defense_bonus=0
food=1
trade=2
resources="Fish","Whales","Shellfish","Salt"
base_time=1
road_time=0
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=0
irrigation_time=0
mining_shield_incr=0
mining_time=0
transform_result="Grassland"
transform_time=36
animal="None"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="none"
warmer_drier_result="none"
cooler_wetter_result="Glacier"
cooler_drier_result="none"
flags="NoCities","UnsafeCoast","NoZoc","Sea","RecoverHP","NoFortify"
property_ocean_depth=35
native_to="Missile","Sea","Trireme","Sub","Helicopter","Air"
color.r=0
color.g=46
color.b=137
helptext="Shallow oceans are mostly found near coastlines, and are often rich sources of food and other resources."

[terrain_3]
name=_("Deep Ocean")
graphic="floor"
graphic_alt="coast"
identifier=":"
class="Oceanic"
movement_cost=1
defense_bonus=0
food=1
trade=2
base_time=1
road_time=0
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=0
irrigation_time=0
mining_shield_incr=0
mining_time=10
transform_result="none"
transform_time=0
animal="None"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="none"
warmer_drier_result="none"
cooler_wetter_result="none"
cooler_drier_result="none"
flags="NoCities","UnsafeCoast","Sea","NoPollution","CanHaveStorm","NoFortify"
property_ocean_depth=70
native_to="Missile","Sea","Sub","Helicopter","Air"
color.r=0
color.g=33
color.b=129
helptext="Deep oceans cover much of the world away from coastlines, and only seaworthy units (not including Galleys) can travel on them.","Units in Deep Ocean receive a +50% defense bonus against sea units (but not against submarines)."

[terrain_4]
name=_("Glacier")
graphic="arctic"
graphic_alt="-"
identifier="a"
class="Land"
movement_cost=2
defense_bonus=0
resources="Seals","Oil"
base_time=2
road_time=4
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=0
irrigation_time=0
mining_shield_incr=1
mining_time=10
transform_result="Lake"
transform_time=24
animal="Bear"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="Lake"
warmer_drier_result="Tundra"
cooler_wetter_result="none"
cooler_drier_result="none"
flags="NoBarbs","NoCities","CanHaveRiver","Frozen","Oil","CanHaveStorm"
property_frozen=100
native_to="Missile","Land","Small Land","Big Land","Merchant","Helicopter","Air"
color.r=232
color.g=232
color.b=232
helptext="Glaciers are found only in the most northerly or southerly reaches of the world. They are very cold, and hence difficult to work with."

[terrain_5]
name=_("Desert")
graphic="desert"
graphic_alt="-"
identifier="d"
class="Land"
movement_cost=1
defense_bonus=0
shield=1
resources="Oasis","Oil","Incense"
road_trade_incr_pct=100
base_time=1
road_time=2
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=1
irrigation_time=5
mining_shield_incr=1
mining_time=5
transform_result="Plains"
transform_time=24
animal="Lion"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="Swamp"
warmer_drier_result="none"
cooler_wetter_result="Tundra"
cooler_drier_result="Tundra"
flags="CanHaveRiver","Oil"
property_tropical=50
property_temperate=20
property_dry=100
native_to="Missile","Land","Small Land","Big Land","Merchant","Helicopter","Air"
color.r=214
color.g=185
color.b=106
helptext="Deserts are regions of extreme dryness, making agriculture very difficult.","Deserts can be irrigated for a small amount of extra food, but without an oasis or river, bare desert cannot be further improved with farmland.","Rivers bring fertile soil to deserts; on a desert river not already benefiting from an oasis, building irrigation will yield two extra food resources rather than the usual one."

[terrain_6]
name=_("Forest")
graphic="forest"
graphic_alt="-"
identifier="f"
class="Land"
movement_cost=2
defense_bonus=25
food=1
shield=2
resources="Pheasant","Silk","Deer"
base_time=2
road_time=4
cultivate_result="Plains"
cultivate_time=10
plant_result="none"
plant_time=0
irrigation_food_incr=0
irrigation_time=0
mining_shield_incr=1
mining_time=10
transform_result="Grassland"
transform_time=24
animal="Wolf"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="Jungle"
warmer_drier_result="none"
cooler_wetter_result="none"
cooler_drier_result="none"
flags="Starter","CanHaveRiver","Wood"
property_foliage=50
property_temperate=50
property_cold=20
property_wet=20
native_to="Missile","Land","Small Land","Big Land","Merchant","Helicopter","Air"
color.r=43
color.g=107
color.b=19
helptext="Forests are densely wooded, making agriculture and trade somewhat problematic."

[terrain_7]
name=_("Grassland")
graphic="grassland"
graphic_alt="-"
identifier="g"
class="Land"
movement_cost=1
defense_bonus=0
food=2
resources="Corn","Cattle","Cotton","Wool","Tobacco","Tea"
road_trade_incr_pct=100
base_time=1
road_time=2
cultivate_result="none"
cultivate_time=0
plant_result="Forest"
plant_time=10
irrigation_food_incr=1
irrigation_time=5
mining_shield_incr=0
mining_time=0
transform_result="Lake"
transform_time=36
animal="Tiger"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="Swamp"
warmer_drier_result="Swamp"
cooler_wetter_result="Swamp"
cooler_drier_result="Tundra"
flags="Starter","CanHaveRiver","RecoverHP"
property_green=50
property_temperate=50
native_to="Missile","Land","Small Land","Big Land","Merchant","Helicopter","Air"
color.r=11
color.g=138
color.b=4
helptext="Grasslands afford exceptional agricultural opportunities."

[terrain_8]
name=_("Hills")
graphic="hills"
graphic_alt="-"
identifier="h"
class="Land"
movement_cost=2
defense_bonus=50
food=1
shield=1
resources="Coal","Wine","Marble"
base_time=2
road_time=4
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=1
irrigation_time=10
mining_shield_incr=2
mining_time=10
transform_result="Plains"
transform_time=24
animal="Leopard"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="none"
warmer_drier_result="none"
cooler_wetter_result="none"
cooler_drier_result="none"
flags="Starter","CanHaveRiver"
property_mountainous=30
property_green=50
native_to="Missile","Land","Small Land","Big Land","Merchant","Helicopter","Air"
color.r=24
color.g=97
color.b=5
helptext="In addition to being amenable to agriculture, Hills are frequently rich in resources, but trade is somewhat problematic.","Cities built in hills are at risk of earthquakes, which can interrupt a city's current project."

[terrain_9]
name=_("Jungle")
graphic="jungle"
graphic_alt="-"
identifier="j"
class="Land"
movement_cost=2
defense_bonus=25
food=1
shield=1
resources="Gems","Fruit","Ivory"
base_time=2
road_time=4
cultivate_result="Swamp"
cultivate_time=10
plant_result="none"
plant_time=0
irrigation_food_incr=0
irrigation_time=0
mining_shield_incr=1
mining_time=10
transform_result="Forest"
transform_time=36
animal="Gorilla"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="none"
warmer_drier_result="none"
cooler_wetter_result="none"
cooler_drier_result="Forest"
flags="CanHaveRiver","Wood","NoWheeled"
property_foliage=50
property_tropical=50
property_wet=50
native_to="Missile","Land","Small Land","Merchant","Helicopter","Air"
color.r=55
color.g=156
color.b=38
helptext="Jungles are densely overgrown, making agriculture and trade somewhat problematic. Big Land units may not move into jungle without a road."

[terrain_10]
name=_("Mountains")
graphic="mountains"
graphic_alt="-"
identifier="m"
class="Land"
movement_cost=3
defense_bonus=100
shield=1
resources="Gold","Iron","Iron"
base_time=3
road_time=6
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=0
irrigation_time=0
mining_shield_incr=2
mining_time=10
transform_result="Hills"
transform_time=36
animal="Bear"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="none"
warmer_drier_result="none"
cooler_wetter_result="none"
cooler_drier_result="none"
flags="NoCities","CanHaveRiver","NoWheeled"
property_mountainous=70
native_to="Missile","Land","Small Land","Merchant","Helicopter","Air"
color.r=129
color.g=127
color.b=118
helptext="Mountains are regions of extreme altitude, making agriculture and trade somewhat problematic.","Land units that move into mountains can see an extra space, but a fast land unit ending its turn in mountains without a road will start its next turn with one fewer movement point. Big Land units may not move into mountains without a road."

[terrain_11]
name=_("Plains")
graphic="plains"
graphic_alt="-"
identifier="p"
class="Land"
movement_cost=1
defense_bonus=0
food=1
shield=1
resources="Buffalo","Wheat","Horses"
road_trade_incr_pct=100
base_time=1
road_time=2
cultivate_result="none"
cultivate_time=0
plant_result="Forest"
plant_time=10
irrigation_food_incr=1
irrigation_time=5
mining_shield_incr=0
mining_time=0
transform_result="Hills"
transform_time=24
animal="Snake"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="Swamp"
warmer_drier_result="Desert"
cooler_wetter_result="Desert"
cooler_drier_result="Desert"
flags="Starter","CanHaveRiver","RecoverHP"
property_green=50
property_temperate=50
native_to="Missile","Land","Small Land","Big Land","Merchant","Helicopter","Air"
color.r=122
color.g=156
color.b=46
helptext="Plains are very broad, sparse regions, suitable for some agriculture."

[terrain_12]
name=_("Swamp")
graphic="swamp"
graphic_alt="-"
identifier="s"
class="Land"
movement_cost=2
defense_bonus=25
food=1
resources="Peat","Spice","Sugar"
base_time=2
road_time=4
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=1
irrigation_time=5
mining_shield_incr=0
mining_time=0
transform_result="Grassland"
transform_time=24
animal="Crocodile"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="Desert"
warmer_drier_result="none"
cooler_wetter_result="Tundra"
cooler_drier_result="Desert"
flags="CanHaveRiver","NoWheeled"
property_tropical=10
property_temperate=10
property_cold=10
property_wet=100
native_to="Missile","Land","Small Land","Merchant","Helicopter","Air"
color.r=48
color.g=85
color.b=97
helptext="Swamps suffer from an over-abundance of water, fit for some agriculture and little else. Big Land units may not move in swamps without a road."

[terrain_13]
name=_("Tundra")
graphic="tundra"
graphic_alt="-"
identifier="t"
class="Land"
movement_cost=1
defense_bonus=0
food=1
resources="Game","Furs"
road_trade_incr_pct=100
base_time=1
road_time=2
cultivate_result="none"
cultivate_time=0
plant_result="none"
plant_time=0
irrigation_food_incr=0
irrigation_time=0
mining_shield_incr=1
mining_time=5
transform_result="Plains"
transform_time=24
animal="Wolf"
placing_time=1
pillage_time=1
clean_pollution_time=3
clean_fallout_time=3
warmer_wetter_result="Swamp"
warmer_drier_result="Swamp"
cooler_wetter_result="Glacier"
cooler_drier_result="Desert"
flags="NoBarbs","CanHaveRiver","Oil"
property_cold=50
native_to="Missile","Land","Small Land","Big Land","Merchant","Helicopter","Air"
color.r=188
color.g=188
color.b=188
helptext="Tundra are broad, cold regions, making agriculture somewhat problematic."

; /* <-- avoid gettext warnings
;
; Resource types:
;
; The actual tag used (the * in [resource_*]) must be unique for each resource,
; and may be used in debug output when reading this file.
;
; Notes:
;
; extra                = name of the extra this resource section is part of
;                        (must have "Resource" in its causes)
; identifier           = single-character identifier used in old savegames. This
;                        must be unique for each resource, and changing it will
;                        break loading those old savegames.
; food                 = increased food production
; shield               = increased shield production
; trade                = increased trade production
;
; */ <-- avoid gettext warnings


[resource_0]
extra="Gold"
trade=6
identifier="$"

[resource_1]
extra="Iron"
shield=3
identifier="/"

[resource_2]
extra="Peat"
shield=4
identifier="a"

[resource_3]
extra="Buffalo"
food=1
shield=1
identifier="b"

[resource_4]
extra="Coal"
shield=2
identifier="c"

[resource_5]
extra="Corn"
food=1
identifier="C"

[resource_6]
extra="Deer"
food=2
identifier="d"

[resource_7]
extra="Game"
food=2
shield=1
identifier="e"

[resource_8]
extra="Fruit"
food=3
identifier="f"

[resource_9]
extra="Gems"
trade=4
identifier="g"

[resource_10]
extra="Horses"
shield=1
trade=2
identifier="h"

[resource_11]
extra="Seals"
food=1
shield=1
trade=3
identifier="i"

[resource_12]
extra="Ivory"
food=1
shield=1
trade=3
identifier="I"

[resource_13]
extra="Wheat"
food=2
identifier="j"

[resource_14]
extra="Cattle"
food=1
identifier="k"

[resource_15]
extra="Cotton"
shield=1
identifier="K"

[resource_16]
extra="Salt"
shield=1
trade=1
identifier="l"

[resource_17]
extra="Marble"
shield=1
trade=1
identifier="m"

[resource_18]
extra="Incense"
trade=4
identifier="n"

[resource_19]
extra="Oasis"
food=3
identifier="o"

[resource_20]
extra="Pheasant"
food=1
trade=1
identifier="p"

[resource_21]
extra="Tobacco"
trade=2
identifier="q"

[resource_22]
extra="Resources"
shield=1
identifier="r"

[resource_23]
extra="Silk"
trade=3
identifier="s"

[resource_24]
extra="Sugar"
food=2
trade=2
identifier="S"

[resource_25]
extra="Spice"
food=1
trade=4
identifier="t"

[resource_26]
extra="Tea"
trade=2
identifier="T"

[resource_27]
extra="Furs"
food=1
trade=3
identifier="u"

[resource_28]
extra="Whales"
food=1
shield=1
identifier="v"

[resource_29]
extra="Wine"
trade=4
identifier="w"

[resource_30]
extra="Wool"
shield=1
identifier="W"

[resource_31]
extra="Oil"
shield=3
identifier="x"

[resource_32]
extra="Fish"
food=2
identifier="y"

[resource_33]
extra="Shellfish"
food=1
trade=1
identifier="z"

[extraui]
ui_name_base_fortress="?gui_type:Build Fortress/Naval Mine"
ui_name_base_airbase="?gui_type:Build Airbase/Buoy"

; /* <-- avoid gettext warnings
;
; Each extra, including bases, roads, and resource, must have a section here.
; Bases, roads, and resources have additional sections for their specific features.
;
;
; Extra types:
;
; name                    = translatable name as seen by user
; rule_name               = (optional) internal name for savegames, rulesets
;                           etc; if not present, "name" is used for this
;                           purpose too. Since the name used in savegames must
;                           not change, if you want to rename an item after a
;                           ruleset has been released, you should set
;                           "rule_name" to the original value of "name".
; category                = How UI should categorize this extra. One of
;                           "Infra", "Natural", "Nuisance", "Resource",
;                           or "Bonus"
; causes                  = events that can create extra type.
;                           "Irrigation", "Mine", "Hut", "Pollution", "Fallout",
;                           "Appear", "Resource", "Base", or "Road"
;                           (the last three require a corresponding
;                           [resource_*] / [base_*] / [road_*] section)
; rmcauses                = events that can remove extra type.
;                           "CleanPollution", "CleanFallout", "Pillage",
;                           "Disappear", or "Enter"
; infracost               = Number of infrapoints it costs to place this
;                           extra. 0, the default, means extra cannot be placed.
; graphic                 = tag specifying preferred graphic
; graphic_alt             = tag for alternate graphic if preferred graphic is
;                           not present. Can use eg "-" for no alternate
;                           graphic
; activity_gfx            = tag specifying graphic for unit building extra
;                           This can be "None" to indicate that graphic sprite
;                           is not needed.
; act_gfx_alt             = tag for alternative graphic for unit building extra
; act_gfx_alt2            = tag for second alternative graphic for unit building extra
; rmact_gfx               = tag specifying graphic for unit removing extra
;                           This can be "None" to indicate that graphic sprite
;                           is not needed.
; rmact_gfx_alt           = tag for alternative graphic for unit removing extra
; reqs                    = requirements to build the extra (see effects.ruleset
;                           and README.effects for help on requirements)
; rmreqs                  = requirements to remove the extra
; appearance_reqs         = spontaneous appearance requirements
; disappearance_reqs      = spontaneous disappearance requirements
; visibility_req          = Tech a player needs to have to see the extra
;                           This affects visibility only, for all the rules
;                           extra is still there even if player can't see it.
; buildable               = Can extra be built? Defaults to TRUE if extra has
;                           any causes indicating it can result from worker
;                           activity.
;                           If extra is not buildable, it can appear in game
;                           only if placed in the editor, it's placed by
;                           map generator, or on city tile if the extra
;                           also has "AlwaysOnCityCenter" flag set.
; generated               = Can map generator place the extra? Applicable
;                           for Hut, Resource, and River extras.
; build_time              = how long it takes a unit to build this extra.
;                           Value of 0 (default) means that terrain- and
;                           build activity specific time is used instead.
; build_time_factor       = This setting take effect only if build_time is 0.
;                           Terrain and activity specific build time will be
;                           multiplied by this value (default 1)
; removal_time            = how long it takes a unit to remove this extra.
;                           Value of 0 (default) means that terrain- and
;                           removal activity specific time is used instead.
; removal_time_factor     = This setting take effect only if removal_time is 0.
;                           Terrain and activity specific removal time will be
;                           multiplied by this value (default 1)
; defense_bonus           = Percent added to defense when tile has the extra
;                           (default none)
; unit_seen               = How opponents see units inside this extra
;                           "Normal" - Units are seen normally (default)
;                           "Hidden" - Units are hidden from opponents
; appearance_chance       = If extra has cause "Appear" and other requirements
;                           for its appearance are fulfilled, this tells how big
;                           chance it has to appear each turn. The chance is 1/10000
;                           times this value.
; disappearance_chance    = If extra has rmcause "Disappear" and other requirements
;                           for its disappearance are fulfilled, this tells how big
;                           chance it has to disappear each turn. The chance is 1/10000
;                           times this value.
; native_to               = List of unit classes that are considered to
;                           be inside the extra when they are on same tile
; conflicts               = List of extras that cannot be on the same tile.
;                           Bases with non-zero border_sq automatically conflict
;                           with each other.
; hidden_by               = List of extra types that will make this extra
;                           type not to show on UI if both present.
; bridged_over            = List of extra types that, if present in tile, will prevent
;                           building this extra if can't be bridged over
; flags
;   - "NativeTile"        = Native units consider tile native regardless of
;                           terrain
;   - "Refuel"            = Native units can use tile as refuel point
;   - "TerrChangeRemoves" = Extra gets removed when ever terrain changes even
;                           if target terrain could support it
;   - "AlwaysOnCityCenter" = City center tiles always have this extra type
;                           regardless of its other requirements
;   - "AutoOnCityCenter"  = City center tiles will automatically have this
;                           extra type if the player can build it
;   - "ConnectLand"       = Road style gfx on Oceanic tiles are drawn to
;                           connect to adjacent Land tiles even if they have
;                           no extra. This affects appearance only
;   - "GlobalWarming"     = Instances of this extra on map count towards
;                           Global Warming
;   - "NuclearWinter"     = Instances of this extra on map count towards
;                           Nuclear Winter
;   - "ShowFlag"          = Draw owner's flag
;   - "NaturalDefense"    = Extra's defense bonus will be counted to "Natural"
;                           defense layer. The defense bonus of all the extras
;                           located at the tile, native to defending unit,
;                           is calculated as a 1 + sum of bonuses from the extras
;                           on the default "Fortification" defense layer multiplied
;                           by the 1 + sum of bonuses from the extras on the
;                           "Natural" layer.
;   - "NoStackDeath"      = Units inside do not die all at once when attacked
;   - "NoAggressive"      = Units inside are not considered aggressive if
;                           there`s friendly city within 3 tiles
; helptext                = optional help text string; should escape all raw
;                           newlines so that xgettext parsing works
;
; */ <-- avoid gettext warnings


[extra_0]
name=_("Irrigation")
category="Infra"
causes="Irrigation"
rmcauses="Pillage"
graphic="tx.irrigation"
activity_gfx="unit.irrigation"
act_gfx_alt="unit.irrigate"
rmact_gfx="None"
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
flags="IrrigationSource"
conflicts="Mine","Lumber","Oil Well"
hidden_by="Farmland"
helptext="Building an irrigation system on a suitable tile causes it to produce some extra food each turn. Most tiles yield one extra food; a desert with a river will yield two, if it is not already benefiting from an oasis.","Without knowledge of Electricity, irrigation requires a nearby source of water: an ocean, lake, or river tile, or another tile with an irrigation system, must share an edge (not just a corner) with the target tile. However, once irrigated, land remains so even if the water source is removed. Once Electricity is known, any suitable tile may be irrigated without a water source.","Building irrigation on a tile with a mine or oil well will destroy it.","City center tiles get their terrain's irrigation bonus automatically, if there is no conflicting mine or oil well on the tile; however, this does not make cities count as a water source for further irrigation. Irrigation can be built on the city tile simply to allow building further irrigation elsewhere, but will not give the tile any further bonus."

[extra_1]
name=_("?extra:Mine")
category="Infra"
causes="Mine"
rmcauses="Pillage"
graphic="tx.mine"
activity_gfx="unit.mine"
act_gfx_alt="unit.plant"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"TerrainFlag","Wood","Local",FALSE,TRUE
"TerrainClass","Oceanic","Local",FALSE,TRUE
"UnitClass","Sea","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
conflicts="Irrigation","Farmland"
hidden_by="Oil Well"
helptext="Mines can be built on some types of terrain, which increases the number of production points produced by that tile. Hills and Mountains get an extra 2 production points per tile; other terrains get 1 extra production point.","Building a mine on an irrigated tile will destroy the irrigation."

[extra_2]
name=_("Lumber")
category="Infra"
causes="Mine"
rmcauses="Pillage"
graphic="tx.lumber"
graphic_alt="tx.mine"
activity_gfx="unit.lumber"
act_gfx_alt="unit.mine"
act_gfx_alt2="unit.plant"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"TerrainFlag","Wood","Local",TRUE,TRUE
"UnitClass","Sea","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
conflicts="Irrigation","Farmland"

[extra_3]
name=_("Oil Well")
category="Infra"
causes="Mine"
rmcauses="Pillage"
graphic="tx.oil_mine"
graphic_alt="tx.mine"
activity_gfx="unit.oil_mine"
act_gfx_alt="unit.mine"
act_gfx_alt2="unit.plant"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Tech","Refining","Player",TRUE,FALSE
"TerrainFlag","Oil","Local",TRUE,TRUE
"Extra","Mine","Local",TRUE,FALSE
"UnitClass","Sea","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
conflicts="Irrigation","Farmland"
helptext="Once Refining is known, mines on Desert, Tundra and Glacier tiles can be upgraded to oil wells for an extra production point."

[extra_4]
name=_("Oil Platform")
category="Infra"
causes="Mine"
rmcauses="Pillage"
graphic="tx.oil_rig"
graphic_alt="tx.mine"
activity_gfx="unit.oil_rig"
act_gfx_alt="unit.mine"
act_gfx_alt2="unit.plant"
rmact_gfx="None"
reqs={"type","name","range"
"Tech","Miniaturization","Player"
"Terrain","Deep Ocean","Local"
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
conflicts="Buoy","Naval Mine"
helptext="Oil platforms allow cities with Offshore Platforms to get an extra production point from Deep Ocean tiles.","Oil platforms can be built by Workers and similar units on board ships, or directly by Transport units."

[extra_5]
name=_("Pollution")
category="Nuisance"
causes="Pollution"
rmcauses="CleanPollution"
graphic="tx.pollution"
activity_gfx="None"
rmact_gfx="unit.pollution"
reqs={"type","name","range","present","quiet"
"TerrainFlag","NoPollution","Local",FALSE,TRUE
}
build_time=0
removal_time=0
flags="GlobalWarming"
helptext="Pollution appears on tiles around cities with high production or population, or when a Mfg. Plant suffers an industrial accident. It halves all output from its tile, and contributes to the risk of global warming.","The pollution can only be cleared by dispatching Workers, Migrants, Settlers, Engineers, or a Transport with the \"clean pollution\" order.","Pollution from production is likely to start becoming important as your civilization becomes more industrialized, giving you buildings such as Factory and Power Plant which boost production. Replacing a Power Plant with cleaner forms of energy -- a Hydro Plant / Hoover Dam, Nuclear Plant, or Solar Plant -- will reduce pollution from production, as will a Recycling Center.","The city's population starts adding to pollution with the Factory, Super Highways, Offshore Platform, and Mfg. Plant buildings; each building causes the population to add more to pollution. A Mass Transit will counteract the pollution from two buildings in a city, and the Eiffel Tower wonder will counteract the pollution from one building in all the owner's cities.","The contribution of these factors can be seen in the city dialog; once it exceeds a threshold, the excess is the percent chance of pollution appearing each turn.","When an unused tile becomes polluted, there is the temptation to avoid the effort of cleaning it; but the spread of pollution has far more terrible results than the immediate economic impact -- every polluted tile increases the chance of global warming. Each time global warming advances, the entire world loses coastal land to the sea and to jungles and swamps, and inland tiles are lost to desert. This tends to devastate cities and leads to global impoverishment.","The risk of global warming is cumulative; the longer polluted tiles are left uncleaned, the higher the risk becomes, and the risk can linger for some time even after all pollution has been cleaned. If a long time passes with an elevated risk of warming, its effects will be all the more severe when it does occur."

[extra_6]
name=_("Minor Tribe Village")
rule_name="Hut"
category="Bonus"
causes="Hut"
rmcauses="Enter"
graphic="tx.village"
activity_gfx="None"
rmact_gfx="None"
reqs={"type","name","range"
"TerrainClass","Land","Local"
}
build_time=0
removal_time=0
helptext="Villages (also called \"huts\") are primitive communities spread across the world at the beginning of the game. Any land unit can enter a village, making the village disappear and deliver a random response. If the village proves hostile, it could produce barbarians or the unit entering may simply be destroyed. If they are friendly, the player could receive gold, a new technology, a military unit (occasionally a settler; and sometimes a unit that the player cannot yet create), or even a new city.","Later in the game, helicopters may also enter villages, but overflight by other aircraft will cause the villagers to take fright and disband."

[extra_7]
name=_("Farmland")
category="Infra"
causes="Irrigation"
rmcauses="Pillage"
graphic="tx.farmland"
activity_gfx="unit.farmland"
act_gfx_alt="unit.irrigation"
act_gfx_alt2="unit.irrigate"
rmact_gfx="None"
reqs={"type","name","range"
"Tech","Refrigeration","Player"
"Extra","Irrigation","Local"
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
conflicts="Mine","Lumber","Oil Well"
helptext="Once Refrigeration is known, irrigation systems can be upgraded to farmland by irrigating them a second time; if the city working the tile has a Supermarket, a farmland tile provides 50% more food. (Hence, farmland is only useful on tiles which with irrigation yield 2 or more food.)","Farmland on a tile prevents any trade bonus from Super Highways.","Like irrigation, farmland is incompatible with mines and oil wells."

[extra_8]
name=_("Fallout")
category="Nuisance"
causes="Fallout"
rmcauses="CleanFallout"
graphic="tx.fallout"
activity_gfx="None"
rmact_gfx="unit.fallout"
reqs={"type","name","range","present","quiet"
"TerrainFlag","NoPollution","Local",FALSE,TRUE
}
build_time=0
removal_time=0
flags="NuclearWinter"
helptext="Nuclear fallout can appear on tiles when a Nuclear unit is detonated, or when a city's Nuclear Plant has an accident. It halves all output from its tile.","Every tile with nuclear fallout also increases the risk of global nuclear winter. If nuclear winter occurs, land across the globe changes into desert, tundra, and ice, and lakes and oceans freeze.","Settlers, Workers, Migrants, Engineers, and Transport units can all clean up nuclear fallout."

[extra_9]
name=_("Fort")
category="Infra"
causes="Base"
rmcauses="Pillage"
graphic="base.outpost"
graphic_alt="base.fortress"
activity_gfx="unit.outpost"
act_gfx_alt="unit.fortress"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Tech","Construction","Player",TRUE,FALSE
"TerrainClass","Land","Local",TRUE,FALSE
"UnitFlag","Fortress","Local",TRUE,FALSE
"CityTile","Center","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
native_to="Land","Small Land","Big Land","Merchant"
flags="NativeTile","DiplomatDefense","ForWheeled"
conflicts="Airstrip","Airbase"
hidden_by="Fortress"
helptext="Forts are rapidly-built fortifications providing some defense (+50%) against land units and boats. A fort is also necessary to start building a fortress."

[extra_10]
name=_("Fortress")
category="Infra"
causes="Base"
rmcauses="Pillage"
graphic="base.fortress"
activity_gfx="unit.fortress"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Extra","Fort","Local",TRUE,FALSE
"Tech","Construction","Player",TRUE,FALSE
"TerrainClass","Land","Local",TRUE,FALSE
"UnitFlag","Fortress","Local",TRUE,FALSE
"Extra","River","Local",FALSE,FALSE
"CityTile","Center","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
native_to="Land","Small Land","Big Land","Merchant"
flags="NativeTile","NoAggressive","DiplomatDefense","ForWheeled"
conflicts="Airstrip","Airbase"
hidden_by="Castle"
helptext="Fortresses are more permanent forts; construction on them can only begin once the underlying fort is complete. Forts on River tiles cannot be upgraded to Fortresses.","Compared to a fort, units in a fortress receive extra defense (+50%) against all units (in total, their defense against land units and boats is doubled), and do not count as aggressive if near a friendly city. Any kind of land unit remaining in a fortress for a whole turn without moving recovers a third of its hit points.","With Astronomy, fortresses gain watchtowers from which units can see further afield."

[extra_11]
name=_("Castle")
category="Infra"
causes="Base"
rmcauses="Pillage"
graphic="base.castle"
graphic_alt="base.fortress"
activity_gfx="unit.castle"
act_gfx_alt="unit.fortress"
rmact_gfx="None"
reqs={"type","name","range","present"
"Extra","Fortress","Local",TRUE
"Tech","Feudalism","Player",TRUE
"UnitFlag","Fortress","Local",TRUE
"UnitFlag","Settlers","Local",TRUE
"DiplRelTile","Foreign","Local",FALSE
"TerrainFlag","NoCities","Local",FALSE
"CityTile","Center","Adjacent",FALSE
"Extra","Castle","Adjacent",FALSE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
native_to="Land","Small Land","Big Land","Merchant"
flags="NativeTile","NoStackDeath","NoAggressive","DiplomatDefense","ForWheeled"
conflicts="Airstrip","Airbase"
helptext="Castles are fortresses with some degree of autonomy; construction on them can only begin once the underlying fortress is complete.","Fortresses can be upgraded to castles when they are inside your national borders, not adjacent to other castles or cities, and not on terrains where cities can not be built (mountains or glaciers).","Castles, like cities, protect full stacks from dying when one unit is defeated, hide units inside from opponents, and claim ownership of the tile."

[extra_12]
name=_("Airstrip")
category="Infra"
causes="Base"
rmcauses="Pillage"
graphic="base.airstrip"
graphic_alt="base.airbase"
activity_gfx="unit.airstrip"
act_gfx_alt="unit.airbase"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Tech","Radio","Player",TRUE,FALSE
"TerrainClass","Land","Local",TRUE,FALSE
"UnitFlag","Settlers","Local",TRUE,FALSE
"CityTile","Center","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
native_to="Missile","Helicopter","Air"
flags="Refuel","ParadropFrom"
conflicts="Fort","Fortress","Castle"
hidden_by="Airbase"
helptext="Airstrips are rapidly-built runways allowing air units to land, refuel, and recover outside cities; an aircraft remaining on an airstrip for a whole turn without moving recovers a tenth of its hit points (that is, the same amount it loses each turn while airborne). However, air units on an airstrip are vulnerable to attack by land units.","Any units on an airstrip receive extra defense (+50%) against enemy aircraft.","An airstrip is necessary to start building an airbase."

[extra_13]
name=_("Airbase")
category="Infra"
causes="Base"
rmcauses="Pillage"
graphic="base.airbase"
activity_gfx="unit.airbase"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Extra","Airstrip","Local",TRUE,FALSE
"Tech","Radio","Player",TRUE,FALSE
"TerrainClass","Land","Local",TRUE,FALSE
"UnitFlag","Settlers","Local",TRUE,FALSE
"Extra","River","Local",FALSE,FALSE
"CityTile","Center","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
native_to="Missile","Helicopter","Air"
flags="Refuel","NoAggressive","ParadropFrom"
conflicts="Fort","Fortress","Castle"
helptext="Airbases are more permanent airstrips; construction on them can only begin once the underlying airstrip is complete. Airstrips on River tiles cannot be upgraded to Airbases.","Compared to an airstrip, units in an airbase receive extra defense (+50%) against all units (in total, their defense against air units and missiles is doubled), do not count as aggressive if near a friendly city, and can see further afield. Also, air units recover more hit points (a third per turn, the same as in a city without an Airport)."

[extra_14]
name=_("Buoy")
category="Infra"
causes="Base"
rmcauses="Pillage"
graphic="base.buoy"
graphic_alt="base.fortress"
activity_gfx="unit.buoy"
act_gfx_alt="unit.fortress"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Tech","Radio","Player",TRUE,FALSE
"TerrainClass","Oceanic","Local",TRUE,FALSE
"UnitFlag","Settlers","Local",TRUE,FALSE
"CityTile","Center","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=3
removal_time=0
flags="ShowFlag"
conflicts="Oil Platform","Naval Mine"
helptext="Buoys may be built in the ocean by Transports (or by worker units on a sea-going vessel) to allow their owner to see the surrounding tiles."

[extra_15]
name=_("Naval Mine")
category="Infra"
causes="Base"
rmcauses="Pillage"
graphic="base.naval_mine"
graphic_alt="tx.village"
activity_gfx="unit.naval_mine"
act_gfx_alt="unit.buoy"
act_gfx_alt2="unit.fortress"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Tech","Explosives","Player",TRUE,FALSE
"TerrainClass","Oceanic","Local",TRUE,FALSE
"Terrain","Deep Ocean","Local",FALSE,FALSE
"UnitFlag","Settlers","Local",TRUE,FALSE
"Extra","Naval Mine","Adjacent",FALSE,FALSE
"CityTile","Center","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=3
removal_time=0
native_to="Sea"
conflicts="Oil Platform","Buoy"
helptext="Naval mines may be built in shallow ocean by Transports (or by worker units on a sea-going vessel), but not adjacent to other naval mines.","Every naval unit adjacent to a naval mine (or on the same tile) gets the same defense as if it were in Deep Ocean (+50% against other sea units, but not against submarines). If the unit is outside its own national border, it also takes some damage (-6 hit points) at the end of each turn."

[extra_16]
name=_("Ruins")
category="Bonus"
rmcauses="Pillage"
graphic="extra.ruins"
graphic_alt="base.ruins"
activity_gfx="None"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"TerrainClass","Land","Local",TRUE,FALSE
"CityTile","Center","Local",FALSE,TRUE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
flags="TerrChangeRemoves"
helptext="Ruins mark the former site of a city that was destroyed or abandoned. They have no effect on gameplay."

[extra_17]
name=_("Road")
category="Infra"
causes="Road"
rmcauses="Pillage"
graphic="road.road"
activity_gfx="unit.road"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"UnitFlag","Settlers","Local",TRUE,FALSE
"UnitClass","Sea","Local",FALSE,TRUE
"TerrainClass","Land","Local",TRUE,FALSE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=0
removal_time=0
native_to="Land","Small Land","Big Land","Merchant"
flags="NativeTile","AlwaysOnCityCenter","ForWheeled"
hidden_by="Railroad","Maglev"
bridged_over="River"
helptext="Roads allow your land units to move more quickly, and allow wheeled Big Land units such as Chariots and Catapults to travel through otherwise difficult terrain (Mountains, Jungle, and Swamp).","On some terrains, roads also provide a trade bonus.","Building roads on river tiles requires knowledge of Bridge Building. City center tiles automatically get roads (even on a river tile)."

[extra_18]
name=_("Railroad")
category="Infra"
causes="Road"
rmcauses="Pillage"
graphic="road.rail"
activity_gfx="unit.rail"
act_gfx_alt="unit.road"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Tech","Railroad","Player",TRUE,FALSE
"Extra","Road","Local",TRUE,FALSE
"UnitFlag","Settlers","Local",TRUE,FALSE
"UnitClass","Sea","Local",FALSE,TRUE
"TerrainClass","Land","Local",TRUE,FALSE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=3
removal_time=0
native_to="Land","Small Land","Big Land","Merchant"
flags="NativeTile","AutoOnCityCenter","ForWheeled"
hidden_by="Maglev"
bridged_over="River"
helptext="Once you learn the Railroad technology, you may upgrade your roads to railroads. Units travel considerably faster along railroads than along roads.","A railroad also increases any shield resources produced by a tile by half. A tile whose road is upgraded to a railroad retains any trade bonus from the road as well.","City center tiles with roads are automatically upgraded to railroads when you learn the Railroad technology."

[extra_19]
name=_("Maglev")
category="Infra"
causes="Road"
rmcauses="Pillage"
graphic="road.maglev"
graphic_alt="road.rail"
activity_gfx="unit.maglev"
act_gfx_alt="unit.road"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Tech","Superconductors","Player",TRUE,FALSE
"Extra","Railroad","Local",TRUE,FALSE
"UnitFlag","Settlers","Local",TRUE,FALSE
"UnitClass","Sea","Local",FALSE,TRUE
"TerrainClass","Land","Local",TRUE,FALSE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=3
removal_time=0
native_to="Land","Small Land"
flags="NativeTile","AutoOnCityCenter","ForWheeled"
bridged_over="River"
helptext="With sufficient technology, you may build magnetic levitation systems along your railroad routes. Land and Small Land units expend no movement points when riding a maglev; you may ride indefinitely. (As may your enemies!)","Your regular railroads are still used to carry heavy Big Land and Merchant units for which the maglev system is unsuitable, and they continue to provide production and trade bonuses.","City center tiles with railroads are automatically upgraded to maglev when you learn about Superconductors."

[extra_20]
name=_("River")
category="Natural"
causes="Road"
graphic="road.river"
activity_gfx="None"
rmact_gfx="None"
buildable=FALSE
build_time=0
removal_time=0
defense_bonus=25
native_to="Land","Small Land","Merchant"
flags="NativeTile","IrrigationSource","AllowsFarmlandOnDesert"
helptext="Any land terrain type may have a River on it. A River adds 1 trade to the resources produced by that tile. It also increases a tile's defense factor by 25%.","Land units may move along rivers for faster travel (but not diagonally). Fast land unit ending its turn in rivers without a road will start its next turn with one fewer movement point.","Roads and railroads can only be built on River tiles if your civilization has learned Bridge Building technology. Fortresses and Airbases cannot be built on River tiles.","Cities built on or next to rivers incur a small risk of flooding, which will destroy stored food."

[extra_21]
name=_("Canal")
category="Infra"
causes="Road"
rmcauses="Pillage"
graphic="road.canal"
graphic_alt="road.river"
activity_gfx="unit.canal"
act_gfx_alt="unit.road"
rmact_gfx="None"
reqs={"type","name","range","present","quiet"
"Tech","Explosives","Player",TRUE,FALSE
"TerrainClass","Oceanic","Local",FALSE,TRUE
"Terrain","Glacier","Local",FALSE,FALSE
"Terrain","Hills","Local",FALSE,FALSE
"Terrain","Mountains","Local",FALSE,FALSE
"TerrainClass","Oceanic","CAdjacent",TRUE,FALSE
"UnitFlag","Settlers","Local",TRUE,FALSE
"DiplRelTile","Foreign","Local",FALSE,FALSE
}
rmreqs={"type","name","range","present"
"UnitFlag","Cant_Pillage","Local",FALSE
}
build_time=9
removal_time=0
native_to="Sea","Trireme","Sub"
flags="NativeTile"
helptext="Allows ships to travel through land tiles. Canals can be built on low land tiles (no hills, mountains or glaciers), and only inside your national borders. Every canal tile must be cardinally adjacent to an oceanic tile, so the maximum length of a canal through an island is two tiles, from one coast tile to the other."

[extra_22]
name=_("Wonder")
category="Natural"
causes="Base"
graphic="base.wonder"
graphic_alt="base.buoy"
activity_gfx="None"
rmact_gfx="None"
buildable=FALSE
build_time=0
removal_time=0
flags="TerrChangeRemoves"
helptext="Natural wonders produce 2 extra luxury points in the tile where they are located.","A city with a natural wonder within its workable area incur a small risk of natural disaster, which will reduce the population."

[extra_23]
name=_("Storm")
category="Nuisance"
causes="Appear"
rmcauses="Disappear"
graphic="tx.storm"
graphic_alt="tx.village"
activity_gfx="None"
rmact_gfx="None"
appearance_reqs={"type","name","range"
"TerrainFlag","CanHaveStorm","Local"
}
build_time=0
removal_time=0
appearance_chance=100
disappearance_chance=5000
helptext="Storms appear and disappear randomly on Deep Ocean or Glacier tiles. Every unit that ends the turn on these terrains adjacent to a storm (or on the same tile) takes some damage (-4 hit points)."

[extra_24]
name=_("Bombardment")
category="Nuisance"
rmcauses="Disappear"
graphic="tx.bombardment"
graphic_alt="tx.fallout"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
disappearance_chance=10000
helptext="Appears on a tile when a unit bombards from it. It prevents other units to bombard from the same tile until the next turn."

[extra_25]
name=_("Goods")
category="Nuisance"
rmcauses="Disappear"
graphic="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
disappearance_chance=10000
helptext="Cancels all the trade routes of the city at the end of the turn, and then it disappears."

[extra_26]
name=_("Aluminum")
category="Natural"
graphic="tx.aluminum"
graphic_alt="base.buoy"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
flags="TerrChangeRemoves"
conflicts="Niter","Rubber","Uranium"
helptext="Strategic resource, required in a city to build the wonder Apollo Program. Cities with available Aluminum build Carrier, AEGIS Cruiser, Cruise Missile, Fighter and Bomber units with one extra veteran level.","With the discovery of Industrialization, Aluminum produces 2 extra shields in the tile (hills or tundra)."

[extra_27]
name=_("Niter")
category="Natural"
graphic="tx.niter"
graphic_alt="base.buoy"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
flags="TerrChangeRemoves"
conflicts="Aluminum","Rubber","Uranium"
helptext="Strategic resource. Cities without available Niter build gunpowder based units with one less veteran level: Musketeers, Riflemen, Alpine Troops, Dragoons, Cavalry, Cannon, Artillery, Galleon, Frigate and Ironclad.","With the discovery of Gunpowder, Niter produces 2 extra shields in the tile (plains or desert)."

[extra_28]
name=_("Rubber")
category="Natural"
graphic="tx.rubber"
graphic_alt="base.buoy"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
flags="TerrChangeRemoves"
conflicts="Aluminum","Niter","Uranium"
helptext="Strategic resource. Cities with available Rubber build Marines, Paratroopers, Helicopter, Mech. Inf. and Howitzer units with one extra veteran level.","With the discovery of Chemistry, Rubber produces 2 extra shields in the tile (jungle, swamp or forest)."

[extra_29]
name=_("Uranium")
category="Natural"
graphic="tx.uranium"
graphic_alt="base.buoy"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
flags="TerrChangeRemoves"
conflicts="Aluminum","Niter","Rubber"
helptext="Strategic resource, required in a city to build a Nuclear Plant or the wonder Manhattan Project. Cities with available Uranium build Armor and Submarine units with one extra veteran level.","With discovery of Atomic Theory, Uranium produces 2 extra shields in the tile (mountains or glacier)."

[extra_30]
name=_("Gold")
category="Resource"
causes="Resource"
graphic="ts.gold"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_31]
name=_("Iron")
category="Resource"
causes="Resource"
graphic="ts.iron"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_32]
name=_("Peat")
category="Resource"
causes="Resource"
graphic="ts.peat"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_33]
name=_("Buffalo")
category="Resource"
causes="Resource"
graphic="ts.buffalo"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_34]
name=_("Coal")
category="Resource"
causes="Resource"
graphic="ts.coal"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_35]
name=_("Corn")
category="Resource"
causes="Resource"
graphic="ts.corn"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_36]
name=_("Deer")
category="Resource"
causes="Resource"
graphic="ts.deer"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_37]
name=_("?animals:Game")
category="Resource"
causes="Resource"
graphic="ts.tundra_game"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_38]
name=_("Fruit")
category="Resource"
causes="Resource"
graphic="ts.fruit"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_39]
name=_("Gems")
category="Resource"
causes="Resource"
graphic="ts.gems"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_40]
name=_("Horses")
category="Resource"
causes="Resource"
graphic="ts.horses"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_41]
name=_("Seals")
category="Resource"
causes="Resource"
graphic="ts.seals"
graphic_alt="ts.arctic_ivory"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_42]
name=_("Ivory")
category="Resource"
causes="Resource"
graphic="ts.ivory"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_43]
name=_("Wheat")
category="Resource"
causes="Resource"
graphic="ts.wheat"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_44]
name=_("Cattle")
category="Resource"
causes="Resource"
graphic="ts.cattle"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_45]
name=_("Cotton")
category="Resource"
causes="Resource"
graphic="ts.cotton"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_46]
name=_("Salt")
category="Resource"
causes="Resource"
graphic="ts.salt"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_47]
name=_("Marble")
category="Resource"
causes="Resource"
graphic="ts.marble"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_48]
name=_("Incense")
category="Resource"
causes="Resource"
graphic="ts.incense"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_49]
name=_("Oasis")
category="Resource"
causes="Resource"
graphic="ts.oasis"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
flags="AllowsFarmlandOnDesert"
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_50]
name=_("Pheasant")
category="Resource"
causes="Resource"
graphic="ts.pheasant"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_51]
name=_("Tobacco")
category="Resource"
causes="Resource"
graphic="ts.tobacco"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_52]
name=_("Resources")
category="Resource"
causes="Resource"
graphic="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_53]
name=_("Silk")
category="Resource"
causes="Resource"
graphic="ts.silk"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_54]
name=_("Sugar")
category="Resource"
causes="Resource"
graphic="ts.sugar"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_55]
name=_("Spice")
category="Resource"
causes="Resource"
graphic="ts.spice"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Tea","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_56]
name=_("Tea")
category="Resource"
causes="Resource"
graphic="ts.tea"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Furs","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_57]
name=_("Furs")
category="Resource"
causes="Resource"
graphic="ts.furs"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Whales","Wine","Wool","Oil","Fish","Shellfish"

[extra_58]
name=_("Whales")
category="Resource"
causes="Resource"
graphic="ts.whales"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Wine","Wool","Oil","Fish","Shellfish"

[extra_59]
name=_("Wine")
category="Resource"
causes="Resource"
graphic="ts.wine"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wool","Oil","Fish","Shellfish"

[extra_60]
name=_("Wool")
category="Resource"
causes="Resource"
graphic="ts.wool"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Oil","Fish","Shellfish"

[extra_61]
name=_("Oil")
category="Resource"
causes="Resource"
graphic="ts.oil"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Fish","Shellfish"

[extra_62]
name=_("Fish")
category="Resource"
causes="Resource"
graphic="ts.fish"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Shellfish"

[extra_63]
name=_("Shellfish")
category="Resource"
causes="Resource"
graphic="ts.shellfish"
graphic_alt="ts.grassland_resources"
activity_gfx="None"
rmact_gfx="None"
build_time=0
removal_time=0
conflicts="Gold","Iron","Peat","Buffalo","Coal","Corn","Deer","Game","Fruit","Gems","Horses","Seals","Ivory","Wheat","Cattle","Cotton","Salt","Marble","Incense","Oasis","Pheasant","Tobacco","Resources","Silk","Sugar","Spice","Tea","Furs","Whales","Wine","Wool","Oil","Fish"

; /* <-- avoid gettext warnings
;
; Base types:
;
; extra                   = name of the extra this base section is part of
;                           (must have "Base" in its causes)
; gui_type                = How gui should handle this base.
;                           Value can be "Fortress", "Airbase", or "Other"
;                           See also [extraui] section
; border_sq               = Base will claim land ownership up to this radius,
;                           -1 to disable. If enabled, base cannot exist in
;                           city tile.
;                           Base (and border) ownership will change hands if
;                           an enemy unit does "Conquer Extras" to the tile.
; vision_main_sq          = Base will have main layer vision to this radius.
;                           Vision initially provided to owner of unit that
;                           built base; base will not then change hands unless
;                           it also claims territory, or tile has another such
;                           base or city, or another base is built (tile only
;                           tracks one owner for all bases).
; vision_invis_sq         = Base will have invisible layer vision to this radius
; vision_subs_sq          = Base will have subsurface layer vision to this radius
;
; */ <-- avoid gettext warnings


[base_0]
extra="Fort"
gui_type="Fortress"

[base_1]
extra="Fortress"
gui_type="Fortress"

[base_2]
extra="Castle"
gui_type="Fortress"
border_sq=0
vision_main_sq=5

[base_3]
extra="Airstrip"
gui_type="Airbase"

[base_4]
extra="Airbase"
gui_type="Airbase"

[base_5]
extra="Buoy"
gui_type="Airbase"
vision_main_sq=5

[base_6]
extra="Naval Mine"
gui_type="Fortress"

[base_7]
extra="Wonder"
gui_type="Other"

; /* <-- avoid gettext warnings
;
; Road types:
;
; extra                   = name of the extra this road section is part of
;                           (must have "Road" in its causes)
; first_reqs              = additional requirements to build the first part of
;                           the road, when none of the adjacent tiles have any
;                           integrating roads (see effects.ruleset and
;                           README.effects for help on requirements)
; move_cost               = how much movement it takes to travel
;                           via this road (in fractional move points, as
;                           defined by move_fragments).
;                           -1 means that road provides no speed bonus.
; move_mode               = how movement costs are applied
;   - "Cardinal"   = Road cost applies only on cardinal moves
;   - "Relaxed"    = Road cost is normal for cardinal, double for diagonal moves
;   - "FastAlways" = Road cost applies always between two tiles with the roads
;                    (default)
; food_incr_const         = food production added to tile regardless of terrain
; shield_incr_const       = shield production added to tile regardless of
;                           terrain
; trade_incr_const        = trade production added to tile regardless of
;                           terrain
; food_incr               = food production added to tile; multiplied by
;                           terrain-specific road_food_incr_pct
; shield_incr             = shield production added to tile; multiplied by
;                           terrain-specific road_shield_incr_pct
; trade_incr              = trade production added to tile; multiplied by
;                           terrain-specific road_trade_incr_pct
; food_bonus              = percent added to food production
; shield_bonus            = percent added to shield production
; trade_bonus             = percent added to trade production
;   In summary, output bonuses from roads are given by the formula:
;   (base_prod + roads.incr_const + roads.incr*terrain.incr_pct) * roads.bonus
; compat_special          = what kind of pre-2.5 special this road corresponds
;                           to, if any: "Road", "Railroad", "River", or "None".
;                           Used for loading old savegames.
; gui_type                = How gui should handle this base.
;                           Value can be "Road", "Railroad", "Maglev", or "Other"
; integrates              = list of road types that are suitable next steps
;                           for travel from this road type; such steps are
;                           possible for units native to both roads and don`t
;                           get cost from underlying terrain; graphics are
;                           drawn accordingly
; flags
;   - "River"             = Automatically generated by map generator, always
;                           flowing from land tiles to ocean
;   - "UnrestrictedInfra" = Use of the enemy owned road is not restricted
;                           even if server setting 'restrictinfra' is set
;   - "JumpFrom"          = Move to a tile nativity providing "JumpTo"
;                           road is considered native
;   - "JumpTo"            = Move from a tile nativity providing "JumpFrom"
;                           road is considered native
;
; */ <-- avoid gettext warnings


[road_0]
extra="Road"
move_cost=2
trade_incr=1
compat_special="Road"
gui_type="Road"

[road_1]
extra="Railroad"
move_cost=1
shield_bonus=50
compat_special="Railroad"
gui_type="Railroad"

[road_2]
extra="Maglev"
move_cost=0
compat_special="None"
gui_type="Other"

[road_3]
extra="River"
move_cost=2
move_mode="Cardinal"
trade_incr_const=1
compat_special="River"
gui_type="Other"
flags="River"

[road_4]
extra="Canal"
move_cost=6
move_mode="Cardinal"
compat_special="None"
gui_type="Other"
